<?php

require_once 'PHPUnit/Framework.php';

require_once dirname(__FILE__) . '/../../../library/Zend149/Service/Bitly.php';

/**
 * Test class for Zend149_Service_Bitly.
 * Generated by PHPUnit on 2010-09-09 at 13:14:32.
 */
class Zend149_Service_BitlyTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var Zend149_Service_Bitly
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Zend149_Service_Bitly;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        unset($this->object);
    }

    /**
     * @todo Implement testShorten().
     */
    public function testShorten()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @todo Implement testExpand().
     */
    public function testExpand()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * Tests the api key getter
     *
     * @covers Zend149_Service_Bitly::getApiKey
     */
    public function testGetApiKey()
    {
        $bitly    = $this->object;
        $expected = 'adadkasdklasldklasdklaklsdkl';

        $bitly->setApiKey($expected);

        $this->assertEquals($expected, $bitly->getApiKey());
    }

    /**
     * Tests the api key getter with a missing value. An exception is expected
     *
     *
     * @covers Zend149_Service_Bitly::getapiKey
     * @expectedException Zend149_Service_Bitly_Exception
     */
    public function testGetApiKeyWithoutValue()
    {
        $bitly = $this->object;
        $bitly->getApiKey();
    }

    /**
     * Tests the api key setter
     * 
     * @covers Zend149_Service_Bitly::setApiKey
     */
    public function testSetApiKey()
    {
        $bitly    = $this->object;
        $expected = 'adadkasdklasldklasdklaklsdkl';

        $bitly->setApiKey($expected);

        $this->assertAttributeEquals($expected, '_apiKey', $bitly);
    }

    /**
     * Tests the login getter
     *
     * @covers Zend149_Service_Bitly::getLogin
     */
    public function testGetLogin()
    {
        $bitly    = $this->object;
        $expected = 'micha149';

        $bitly->setLogin($expected);

        $this->assertEquals($expected, $bitly->getLogin());
    }

    /**
     * Tests the login getter with a missing login value. An exception is expected
     *
     *
     * @covers Zend149_Service_Bitly::getLogin
     * @expectedException Zend149_Service_Bitly_Exception
     */
    public function testGetLoginWithoutValue()
    {
        $bitly = $this->object;
        $bitly->getLogin();
    }
    
    /**
     * Tests the login setter
     *
     * @covers Zend149_Service_Bitly::setLogin
     */
    public function testSetLogin()
    {
        $bitly    = $this->object;
        $expected = 'micha149';

        $bitly->setLogin($expected);
        
        $this->assertAttributeEquals($expected, '_login', $bitly);
    }

    /**
     * Tests the format setter with valid formats
     *
     * @covers Zend149_Service_Bitly::setFormat
     */
    public function testSetValidFormat()
    {
        $bitly = $this->object;

        $bitly->setFormat('object');
        $this->assertAttributeEquals('object', '_format', $bitly);

        $bitly->setFormat('json');
        $this->assertAttributeEquals('json', '_format', $bitly);
    }

    /**
     * Tests the format setter with an invalid format. An Exception should come up.
     *
     * @covers Zend149_Service_Bitly::setFormat
     * @expectedException Zend149_Service_Bitly_Exception
     */
    public function testSetInvalidFormat()
    {
        $bitly = $this->object;
        $bitly->setFormat('hurz');
    }

    /**
     * Test the format getter
     *
     * @covers Zend149_Service_Bitly::getFormat
     */
    public function testGetFormat()
    {
        $bitly = $this->object;
        $expected = 'json';

        $bitly->setFormat($expected);

        $result = $bitly->getFormat();
        $this->assertEquals($expected, $result);
    }

    /**
     * Test the format getter with default value
     *
     * @covers Zend149_Service_Bitly::getFormat
     */
    public function testGetDefaultFormat()
    {
        $bitly = $this->object;
        $result = $bitly->getFormat();
        $this->assertEquals('object', $result);
    }
}
